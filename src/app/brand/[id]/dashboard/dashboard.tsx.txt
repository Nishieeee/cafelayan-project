"use client"

import { useState, useEffect } from "react"
import { useParams } from "next/navigation"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Progress } from "@/components/ui/progress"
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  ResponsiveContainer,
  PieChart,
  Pie,
  Cell,
  LineChart,
  Line,
} from "recharts"
import { Package, Recycle, MapPin, TrendingUp, Building2, Award, Plus, ExternalLink, Download } from "lucide-react"
import { PartnershipRequestDialog } from "@/components/partnership-request-dialog"
import Link from "next/link"
import type { BrandDashboard, CityData } from "@/types/brand"

// Mock brand data - would come from API
const brandDashboardData: Record<string, BrandDashboard> = {
  aquapure: {
    name: "AquaPure",
    logo: "/placeholder.svg?height=60&width=60",
    totalProducts: 45672,
    totalDonations: 12834,
    totalScans: 28945,
    partneredOrganizations: 23,
    activeCities: 15,
    monthlyData: [
      { month: "Jan", scans: 2400, donations: 800 },
      { month: "Feb", scans: 2800, donations: 950 },
      { month: "Mar", scans: 3200, donations: 1100 },
      { month: "Apr", scans: 2900, donations: 980 },
      { month: "May", scans: 3800, donations: 1300 },
      { month: "Jun", scans: 4200, donations: 1450 },
    ],
    topOrganizations: [
      { name: "Green Manila Initiative", donations: 3245, city: "Makati City", partnership: "Official" },
      { name: "EcoHub Philippines", donations: 2890, city: "Taguig City", partnership: "Official" },
      { name: "Cebu Eco Warriors", donations: 2156, city: "Cebu City", partnership: "Community" },
      { name: "Davao Recycling Hub", donations: 1834, city: "Davao City", partnership: "Community" },
      { name: "Recycle Center BGC", donations: 1567, city: "Taguig City", partnership: "Official" },
    ],
    productTypes: [
      { name: "Water Bottles", value: 8500, color: "#0088FE" },
      { name: "Juice Containers", value: 2800, color: "#00C49F" },
      { name: "Sports Drinks", value: 1200, color: "#FFBB28" },
      { name: "Other", value: 334, color: "#FF8042" },
    ],
  },
  ecobottle: {
    name: "EcoBottle Co",
    logo: "/placeholder.svg?height=60&width=60",
    totalProducts: 23450,
    totalDonations: 8920,
    totalScans: 18650,
    partneredOrganizations: 18,
    activeCities: 12,
    monthlyData: [
      { month: "Jan", scans: 1800, donations: 650 },
      { month: "Feb", scans: 2100, donations: 780 },
      { month: "Mar", scans: 2400, donations: 890 },
      { month: "Apr", scans: 2200, donations: 820 },
      { month: "May", scans: 2800, donations: 1050 },
      { month: "Jun", scans: 3200, donations: 1200 },
    ],
    topOrganizations: [
      { name: "Cebu Green Alliance", donations: 2890, city: "Cebu City", partnership: "Official" },
      { name: "Davao Eco Center", donations: 2156, city: "Davao City", partnership: "Official" },
      { name: "Iloilo Recycling Hub", donations: 1834, city: "Iloilo City", partnership: "Community" },
      { name: "Baguio Environmental Group", donations: 1567, city: "Baguio City", partnership: "Community" },
      { name: "Palawan Green Initiative", donations: 1245, city: "Puerto Princesa", partnership: "Official" },
    ],
    productTypes: [
      { name: "Biodegradable Bottles", value: 6500, color: "#0088FE" },
      { name: "Glass Containers", value: 4200, color: "#00C49F" },
      { name: "Bamboo Products", value: 3800, color: "#FFBB28" },
      { name: "Paper Cartons", value: 2950, color: "#FF8042" },
      { name: "Corn-based", value: 2100, color: "#8884D8" },
      { name: "Hemp Composite", value: 1200, color: "#82CA9D" },
    ],
  },
}

export default function BrandDashboardPage() {
  const params = useParams()
  const brandId = params.id as string
  const [showPartnershipDialog, setShowPartnershipDialog] = useState(false)
  const [brandData, setBrandData] = useState<BrandDashboard | null>(null)

  useEffect(() => {
    // Simulate API call
    const data = brandDashboardData[brandId]
    if (data) {
      setBrandData(data)
    }
  }, [brandId])

  if (!brandData) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <h1 className="text-2xl font-bold text-gray-900 mb-2">Brand Not Found</h1>
          <p className="text-gray-600 mb-4">The brand dashboard you're looking for doesn't exist.</p>
          <Button asChild>
            <Link href="/search">Search Brands</Link>
          </Button>
        </div>
      </div>
    )
  }

  const COLORS = ["#0088FE", "#00C49F", "#FFBB28", "#FF8042", "#8884D8", "#82CA9D"]

  const cityData: CityData[] = [
    {
      city: "Metro Manila",
      scans: Math.floor(brandData.totalScans * 0.43),
      donations: Math.floor(brandData.totalDonations * 0.43),
      percentage: 43,
    },
    {
      city: "Cebu City",
      scans: Math.floor(brandData.totalScans * 0.2),
      donations: Math.floor(brandData.totalDonations * 0.2),
      percentage: 20,
    },
    {
      city: "Davao City",
      scans: Math.floor(brandData.totalScans * 0.15),
      donations: Math.floor(brandData.totalDonations * 0.15),
      percentage: 15,
    },
    {
      city: "Iloilo City",
      scans: Math.floor(brandData.totalScans * 0.1),
      donations: Math.floor(brandData.totalDonations * 0.1),
      percentage: 10,
    },
    {
      city: "Baguio City",
      scans: Math.floor(brandData.totalScans * 0.08),
      donations: Math.floor(brandData.totalDonations * 0.08),
      percentage: 8,
    },
    {
      city: "Others",
      scans: Math.floor(brandData.totalScans * 0.04),
      donations: Math.floor(brandData.totalDonations * 0.04),
      percentage: 4,
    },
  ]

  return (
    <div className="container py-8 px-4 md:px-6">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="flex flex-col md:flex-row justify-between items-start md:items-center mb-8 gap-4">
          <div className="flex items-center gap-4">
            <div className="w-16 h-16 bg-gray-100 rounded-lg overflow-hidden">
              <img
                src={brandData.logo || "/placeholder.svg"}
                alt={brandData.name}
                className="w-full h-full object-cover"
              />
            </div>
            <div>
              <h1 className="text-3xl font-bold text-gray-900">{brandData.name} Dashboard</h1>
              <p className="text-gray-600">Recycling Impact & Partnership Analytics</p>
            </div>
          </div>
          <div className="flex gap-3">
            <Button variant="outline">
              <Download className="mr-2 h-4 w-4" />
              Export Report
            </Button>
            <Button asChild variant="outline">
              <Link href="/brand/register-product">
                <Plus className="mr-2 h-4 w-4" />
                Register Product
              </Link>
            </Button>
            <Button onClick={() => setShowPartnershipDialog(true)} className="bg-green-700 hover:bg-green-800">
              <Plus className="mr-2 h-4 w-4" />
              Request Partnership
            </Button>
          </div>
        </div>

        {/* Key Metrics */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6 mb-8">
          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">Total Products</CardTitle>
              <Package className="h-4 w-4 text-muted-foreground" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">{brandData.totalProducts.toLocaleString()}</div>
              <p className="text-xs text-muted-foreground">+12% from last month</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">Total Donations</CardTitle>
              <Recycle className="h-4 w-4 text-muted-foreground" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">{brandData.totalDonations.toLocaleString()}</div>
              <p className="text-xs text-muted-foreground">+18% from last month</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">QR Scans</CardTitle>
              <TrendingUp className="h-4 w-4 text-muted-foreground" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">{brandData.totalScans.toLocaleString()}</div>
              <p className="text-xs text-muted-foreground">+25% from last month</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">Partner Organizations</CardTitle>
              <Building2 className="h-4 w-4 text-muted-foreground" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">{brandData.partneredOrganizations}</div>
              <p className="text-xs text-muted-foreground">+3 new this month</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">Active Cities</CardTitle>
              <MapPin className="h-4 w-4 text-muted-foreground" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">{brandData.activeCities}</div>
              <p className="text-xs text-muted-foreground">Across Philippines</p>
            </CardContent>
          </Card>
        </div>

        <Tabs defaultValue="overview" className="space-y-6">
          <TabsList className="grid w-full grid-cols-4">
            <TabsTrigger value="overview">Overview</TabsTrigger>
            <TabsTrigger value="organizations">Organizations</TabsTrigger>
            <TabsTrigger value="geography">Geography</TabsTrigger>
            <TabsTrigger value="partnerships">Partnerships</TabsTrigger>
          </TabsList>

          {/* Overview Tab */}
          <TabsContent value="overview" className="space-y-6">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              {/* Monthly Trends */}
              <Card>
                <CardHeader>
                  <CardTitle>Monthly Trends</CardTitle>
                  <CardDescription>QR scans and donations over time</CardDescription>
                </CardHeader>
                <CardContent>
                  <ResponsiveContainer width="100%" height={300}>
                    <LineChart data={brandData.monthlyData}>
                      <CartesianGrid strokeDasharray="3 3" />
                      <XAxis dataKey="month" />
                      <YAxis />
                      <Tooltip />
                      <Line type="monotone" dataKey="scans" stroke="#8884d8" strokeWidth={2} />
                      <Line type="monotone" dataKey="donations" stroke="#82ca9d" strokeWidth={2} />
                    </LineChart>
                  </ResponsiveContainer>
                </CardContent>
              </Card>

              {/* Product Types */}
              <Card>
                <CardHeader>
                  <CardTitle>Product Types Donated</CardTitle>
                  <CardDescription>Breakdown by product category</CardDescription>
                </CardHeader>
                <CardContent>
                  <ResponsiveContainer width="100%" height={300}>
                    <PieChart>
                      <Pie
                        data={brandData.productTypes}
                        cx="50%"
                        cy="50%"
                        labelLine={false}
                        label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}
                        outerRadius={80}
                        fill="#8884d8"
                        dataKey="value"
                      >
                        {brandData.productTypes.map((entry, index) => (
                          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                        ))}
                      </Pie>
                      <Tooltip />
                    </PieChart>
                  </ResponsiveContainer>
                </CardContent>
              </Card>
            </div>

            {/* Conversion Rate */}
            <Card>
              <CardHeader>
                <CardTitle>Scan to Donation Conversion</CardTitle>
                <CardDescription>How many scans result in actual donations</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="flex justify-between items-center">
                    <span className="text-sm font-medium">Conversion Rate</span>
                    <span className="text-2xl font-bold">
                      {((brandData.totalDonations / brandData.totalScans) * 100).toFixed(1)}%
                    </span>
                  </div>
                  <Progress value={(brandData.totalDonations / brandData.totalScans) * 100} className="h-2" />
                  <div className="grid grid-cols-2 gap-4 text-sm">
                    <div>
                      <p className="text-gray-500">Total Scans</p>
                      <p className="font-medium">{brandData.totalScans.toLocaleString()}</p>
                    </div>
                    <div>
                      <p className="text-gray-500">Resulted in Donations</p>
                      <p className="font-medium">{brandData.totalDonations.toLocaleString()}</p>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* Organizations Tab */}
          <TabsContent value="organizations" className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>Top Receiving Organizations</CardTitle>
                <CardDescription>Organizations that received the most of your products</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {brandData.topOrganizations.map((org, index) => (
                    <div key={index} className="flex items-center justify-between p-4 border rounded-lg">
                      <div className="flex items-center gap-4">
                        <div className="w-10 h-10 bg-green-100 rounded-full flex items-center justify-center">
                          <Building2 className="h-5 w-5 text-green-600" />
                        </div>
                        <div>
                          <h4 className="font-medium">{org.name}</h4>
                          <div className="flex items-center gap-2 text-sm text-gray-500">
                            <MapPin className="h-3 w-3" />
                            <span>{org.city}</span>
                            <Badge variant={org.partnership === "Official" ? "default" : "outline"} className="text-xs">
                              {org.partnership}
                            </Badge>
                          </div>
                        </div>
                      </div>
                      <div className="text-right">
                        <p className="font-bold text-lg">{org.donations.toLocaleString()}</p>
                        <p className="text-sm text-gray-500">donations received</p>
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Organization Performance</CardTitle>
                <CardDescription>Donations received by organization</CardDescription>
              </CardHeader>
              <CardContent>
                <ResponsiveContainer width="100%" height={300}>
                  <BarChart data={brandData.topOrganizations}>
                    <CartesianGrid strokeDasharray="3 3" />
                    <XAxis dataKey="name" angle={-45} textAnchor="end" height={100} />
                    <YAxis />
                    <Tooltip />
                    <Bar dataKey="donations" fill="#22c55e" />
                  </BarChart>
                </ResponsiveContainer>
              </CardContent>
            </Card>
          </TabsContent>

          {/* Geography Tab */}
          <TabsContent value="geography" className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>Cities with Most Scans</CardTitle>
                <CardDescription>Geographic distribution of QR code scans</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {cityData.map((city, index) => (
                    <div key={index} className="space-y-2">
                      <div className="flex justify-between items-center">
                        <span className="font-medium">{city.city}</span>
                        <div className="text-right">
                          <span className="font-bold">{city.scans.toLocaleString()}</span>
                          <span className="text-sm text-gray-500 ml-2">scans</span>
                        </div>
                      </div>
                      <div className="flex items-center gap-2">
                        <Progress value={city.percentage} className="flex-1 h-2" />
                        <span className="text-sm text-gray-500 w-12">{city.percentage}%</span>
                      </div>
                      <div className="text-sm text-gray-500">{city.donations.toLocaleString()} donations</div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Regional Impact</CardTitle>
                <CardDescription>Environmental impact by region</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                  <div className="text-center p-4 bg-green-50 rounded-lg">
                    <div className="text-2xl font-bold text-green-700">
                      {brandId === "ecobottle" ? "3.1 tons" : "2.3 tons"}
                    </div>
                    <div className="text-sm text-gray-600">Plastic diverted from landfills</div>
                  </div>
                  <div className="text-center p-4 bg-blue-50 rounded-lg">
                    <div className="text-2xl font-bold text-blue-700">{brandData.totalDonations.toLocaleString()}</div>
                    <div className="text-sm text-gray-600">Items recycled</div>
                  </div>
                  <div className="text-center p-4 bg-purple-50 rounded-lg">
                    <div className="text-2xl font-bold text-purple-700">
                      {brandId === "ecobottle" ? "1.2 tons" : "890 kg"}
                    </div>
                    <div className="text-sm text-gray-600">CO2 emissions saved</div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* Partnerships Tab */}
          <TabsContent value="partnerships" className="space-y-6">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              <Card>
                <CardHeader>
                  <CardTitle>Official Partners</CardTitle>
                  <CardDescription>Organizations with formal partnerships</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    {brandData.topOrganizations
                      .filter((org) => org.partnership === "Official")
                      .map((org, index) => (
                        <div key={index} className="flex items-center justify-between p-3 border rounded-lg">
                          <div className="flex items-center gap-3">
                            <Award className="h-5 w-5 text-yellow-500" />
                            <div>
                              <p className="font-medium">{org.name}</p>
                              <p className="text-sm text-gray-500">{org.city}</p>
                            </div>
                          </div>
                          <Button variant="outline" size="sm">
                            <ExternalLink className="h-4 w-4" />
                          </Button>
                        </div>
                      ))}
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>Partnership Benefits</CardTitle>
                  <CardDescription>What you get with official partnerships</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div className="flex items-start gap-3">
                      <div className="w-2 h-2 bg-green-500 rounded-full mt-2"></div>
                      <div>
                        <p className="font-medium">Priority Collection</p>
                        <p className="text-sm text-gray-600">Your products get collected first</p>
                      </div>
                    </div>
                    <div className="flex items-start gap-3">
                      <div className="w-2 h-2 bg-green-500 rounded-full mt-2"></div>
                      <div>
                        <p className="font-medium">Detailed Reporting</p>
                        <p className="text-sm text-gray-600">Monthly impact reports and analytics</p>
                      </div>
                    </div>
                    <div className="flex items-start gap-3">
                      <div className="w-2 h-2 bg-green-500 rounded-full mt-2"></div>
                      <div>
                        <p className="font-medium">Co-marketing Opportunities</p>
                        <p className="text-sm text-gray-600">Joint sustainability campaigns</p>
                      </div>
                    </div>
                    <div className="flex items-start gap-3">
                      <div className="w-2 h-2 bg-green-500 rounded-full mt-2"></div>
                      <div>
                        <p className="font-medium">Custom QR Codes</p>
                        <p className="text-sm text-gray-600">Branded QR codes for your products</p>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>

            <Card>
              <CardHeader>
                <CardTitle>Request New Partnership</CardTitle>
                <CardDescription>Connect with organizations in new cities</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="text-center py-8">
                  <Building2 className="h-12 w-12 text-gray-400 mx-auto mb-4" />
                  <h3 className="text-lg font-medium mb-2">Expand Your Impact</h3>
                  <p className="text-gray-600 mb-6 max-w-md mx-auto">
                    Partner with recycling organizations in new cities to increase your environmental impact and reach
                    more communities.
                  </p>
                  <Button onClick={() => setShowPartnershipDialog(true)} className="bg-green-700 hover:bg-green-800">
                    <Plus className="mr-2 h-4 w-4" />
                    Request Partnership
                  </Button>
                </div>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>

        {/* Partnership Request Dialog */}
        <PartnershipRequestDialog
          open={showPartnershipDialog}
          onOpenChange={setShowPartnershipDialog}
          brandName={brandData.name}
        />
      </div>
    </div>
  )
}
